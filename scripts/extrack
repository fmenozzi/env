#!/usr/bin/env bash

set -euo pipefail

if [ "$#" -ne 1 ]; then
    echo "usage: extrack <url>"
    exit 1
fi

if ! command -v yt-dlp &> /dev/null; then
    echo "could not find yt-dlp in PATH, exiting"
    exit 1
fi

if ! command -v ffmpeg &> /dev/null; then
    echo "could not find ffmpeg in PATH, exiting"
    exit 1
fi

url="$1"

if grep -Fqm1 "playlist" <(echo "$url"); then
    # Playlist, extract audio from each video in playlist.
    echo "downloading audio from playlist videos..."
    yt-dlp                                          \
        -x --audio-format flac                      \
        --embed-thumbnail                           \
        -q --progress --newline                     \
        --progress-template "%(info.playlist_index)s / %(info.playlist_count)s %(info.title)s %(progress._default_template)s" \
        -o "%(playlist_index)s - %(title)s.%(ext)s" \
        "$url"

    mkdir -p tracks
    for file in *.flac; do
        echo "converting $file to opus..."
        ffmpeg                                      \
            -n -nostdin -loglevel panic             \
            -i "$file"                              \
            -c:a libopus                            \
            "tracks/$(basename "$file" .flac).ogg"
    done
else
    # Not a playlist, extract audio from each chapter.
    if ! command -v jq &> /dev/null; then
        echo "could not find jq in PATH, exiting"
        exit 1
    fi

    echo "downloading audio from video..."
    yt-dlp                      \
        -x --audio-format flac  \
        --write-info-json       \
        --embed-thumbnail       \
        -q --progress --newline \
        -o "audio.%(ext)s"      \
        "$url"

    mkdir -p tracks
    max_idx=$(jq -r '.chapters | length - 1' audio.info.json)
    for i in $(seq 0 $max_idx); do
        title=$(jq -r ".chapters[$i].title" audio.info.json)
        start=$(jq -r ".chapters[$i].start_time" audio.info.json)
        end=$(jq -r ".chapters[$i].end_time" audio.info.json)

        echo "extracting track $title.ogg..."
        ffmpeg                              \
            -n -nostdin -loglevel panic     \
            -i "audio.flac"                 \
            -ss "$start" -to "$end"         \
            -c:a libopus                    \
            "tracks/$title.ogg"
    done
fi
