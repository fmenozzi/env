#!/usr/bin/env python3

import argparse
import gitutils

def main(push, stop_at):
    upstreams = gitutils.upstreams()

    branch = str(gitutils.current_branch())
    while True:
        if branch == stop_at:
            break

        upstream = upstreams[branch]

        if not gitutils.is_remote(branch) and not upstream:
            break

        if gitutils.is_remote(upstream):
            if push:
                gitutils.git("push")
            break

        gitutils.git("checkout", [upstream, "-q"])
        gitutils.git("merge", [branch])

        branch = upstream

    # Checkout branch we stopped at.
    gitutils.git("checkout", [branch, "-q"])

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--push", help="Push final branch to origin, if applicable", action="store_true")
    parser.add_argument("--stop-at", help="Branch where final merge occurs", action="store")
    args = parser.parse_args()

    gitutils.check_repo()

    main(args.push, args.stop_at)
